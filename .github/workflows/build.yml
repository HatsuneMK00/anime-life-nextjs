name: Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - v*
permissions:
  contents: write
  packages: write
env:
  IMAGE_NAME: anime-life-nextjs
  COPY_TO_ACR: true
jobs:
  prepare-version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.prepare_version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Read json
        id: read_json
        run: |
          echo "packageJson<<EOF" >> $GITHUB_OUTPUT
          cat ./package.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Prepare version
        id: prepare_version
        run: |
          tag=`echo "${{fromJson(steps.read_json.outputs.packageJson).version}}"`-${{ github.sha }}
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && tag=$(echo $VERSION | sed -e 's/^v//')
          echo tag=$tag
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
  docker-build:
    needs: [prepare-version]
    runs-on: ubuntu-latest
    outputs:
      image_id: ${{ steps.push_image.outputs.image_id }}
    env:
      IMAGE_TAG: ${{ needs.prepare-version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        id: push_image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID
          echo IMAGE_TAG=$IMAGE_TAG
          docker tag $IMAGE_NAME $IMAGE_ID:$IMAGE_TAG
          docker push $IMAGE_ID:$IMAGE_TAG
          echo "image_id=$IMAGE_ID" >> "$GITHUB_OUTPUT"
  docker-copy:
    runs-on: ubuntu-latest
    needs: [prepare-version, docker-build]
    outputs:
      image_id: ${{ steps.export_image_id.outputs.image_id }}
    env:
      IMAGE_ID: ${{ needs.docker-build.outputs.image_id }}
      IMAGE_TAG: ${{ needs.prepare-version.outputs.tag }}
    steps:
      - name: Download from GitHub Packages
        run: |
          echo "pulling $IMAGE_ID:$IMAGE_TAG"
          docker pull $IMAGE_ID:$IMAGE_TAG
      - name: Login to ACR
        if: ${{ env.COPY_TO_ACR == 'true' }}
        uses: aliyun/acr-login@v1
        with:
          login-server: 'https://registry.cn-shanghai.aliyuncs.com'
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_TOKEN }}
      - name: Push to ACR
        id: push_acr
        if: ${{ env.COPY_TO_ACR == 'true' }}
        run: |
          ACR_IMAGE_ID=registry.cn-shanghai.aliyuncs.com/animelife/$IMAGE_NAME
          docker tag $IMAGE_ID:$IMAGE_TAG $ACR_IMAGE_ID:$IMAGE_TAG
          docker push $ACR_IMAGE_ID:$IMAGE_TAG
          echo "acr_image_id=$ACR_IMAGE_ID" >> "$GITHUB_OUTPUT"
      - name: Export image id
        id: export_image_id
        env:
          ACR_IMAGE_ID: ${{ steps.push_acr.outputs.acr_image_id }}
        run: |
          image_id=$IMAGE_ID
          echo "Origin IMAGE_ID=$IMAGE_ID"
          [[ "${{ env.COPY_TO_ACR }}" == 'true' ]] && image_id=$ACR_IMAGE_ID
          echo "Final IMAGE_ID=$image_id"
          echo "image_id=$image_id" >> "$GITHUB_OUTPUT"
  deploy-helm:
    runs-on: ubuntu-latest
    needs: [prepare-version, docker-build, docker-copy]
    env:
      IMAGE_ID: ${{ needs.docker-copy.outputs.image_id }}
      IMAGE_TAG: ${{ needs.prepare-version.outputs.tag }}
    steps:
      - name: Checkout helm-charts repo
        uses: actions/checkout@v4
        with:
          repository: HatsuneMK00/helm-charts
          path: helm-charts
          token: ${{ secrets.GH_TOKEN }}
      - name: debug
        run: |
          pwd
          ls ${{ github.workspace }}/helm-charts
          ls ${{ github.workspace }}/helm-charts/charts
          ls ${{ github.workspace }}/helm-charts/charts/anime-life-nextjs
      - name: Update image tag
        run: |
          ENCODED_IMAGE_ID=$(echo ${{ env.IMAGE_ID }} | sed 's/\//\\\//g')
          sed -i "s/repository:.*/repository: $ENCODED_IMAGE_ID/" ${{ github.workspace }}/helm-charts/charts/anime-life-nextjs/values.yaml
          sed -i "s/tag:.*/tag: ${{ env.IMAGE_TAG }}/" ${{ github.workspace }}/helm-charts/charts/anime-life-nextjs/values.yaml
          cat ${{ github.workspace }}/helm-charts/charts/anime-life-nextjs/values.yaml
      - name: Update chart version
        run: |
          VERSION_SUFFIX=$(echo ${{ github.ref }} | cut -d '/' -f3)
          CHART_VERSION=$IMAGE_TAG-$VERSION_SUFFIX
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && CHART_VERSION=$IMAGE_TAG
          sed -i "s/version:.*/version: ${{ env.IMAGE_TAG }}/" ${{ github.workspace }}/helm-charts/charts/anime-life-nextjs/Chart.yaml
      - name: Commit and push changes to HatsuneMK00/helm-charts
        run: |
          cd ${{ github.workspace }}/helm-charts
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          git commit -m "Update anime-life-nextjs to ${{ env.IMAGE_TAG }}"
          git push